{"ast":null,"code":"import React from \"react\";\nimport PersonList from \"./EmployeeData\";\n\nclass Sorting extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: PersonList,\n      sortOrder: \"\"\n    };\n\n    this.handleSort = whatToSort => {\n      const nameSort = this.state.persons.sort((a, b) => {\n        var nameA = a[whatToSort].toUpperCase();\n        var nameB = b[whatToSort].toUpperCase();\n\n        if (this.state.nameSort !== \"des\") {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          }\n\n          return 0;\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          }\n\n          return 0;\n        }\n      });\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.setState({\n        sortOrder: newSortOrder\n      });\n    };\n  }\n\n}\n\nexport default Sorting;","map":{"version":3,"sources":["C:/Users/sarin/desktop/bootcamp/Employee-directory/src/Components/sorting.js"],"names":["React","PersonList","Sorting","Component","state","persons","sortOrder","handleSort","whatToSort","nameSort","sort","a","b","nameA","toUpperCase","nameB","newSortOrder","setState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,OAAO,EAAEJ,UADL;AAEJK,MAAAA,SAAS,EAAE;AAFP,KAD0B;;AAAA,SAMtCC,UANsC,GAMxBC,UAAD,IAAgB;AACzB,YAAMC,QAAQ,GAAG,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/C,YAAIC,KAAK,GAAGF,CAAC,CAACH,UAAD,CAAD,CAAcM,WAAd,EAAZ;AACA,YAAIC,KAAK,GAAGH,CAAC,CAACJ,UAAD,CAAD,CAAcM,WAAd,EAAZ;;AACA,YAAI,KAAKV,KAAL,CAAWK,QAAX,KAAwB,KAA5B,EAAmC;AAC/B,cAAII,KAAK,GAAGE,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH;;AAAC,cAAIF,KAAK,GAAGE,KAAZ,EAAmB;AACjB,mBAAO,CAAP;AACH;;AACD,iBAAO,CAAP;AACH,SAPD,MAOO;AACH,cAAIF,KAAK,GAAGE,KAAZ,EAAmB;AACf,mBAAO,CAAP;AACH;;AACD,cAAIF,KAAK,GAAGE,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH;;AACD,iBAAO,CAAP;AACH;AACJ,OAnBgB,CAAjB;AAoBA,YAAMC,YAAY,GAAG,KAAKZ,KAAL,CAAWE,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKW,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAEU;AAAb,OAAd;AACH,KA7BqC;AAAA;;AAAA;;AAgCtC,eAAed,OAAf","sourcesContent":["import React from \"react\";\r\nimport PersonList from \"./EmployeeData\";\r\n\r\nclass Sorting extends React.Component {\r\n    state = {\r\n        persons: PersonList,\r\n        sortOrder: \"\"\r\n    }\r\n\r\nhandleSort = (whatToSort) => {\r\n    const nameSort = this.state.persons.sort((a, b) => {\r\n        var nameA = a[whatToSort].toUpperCase();\r\n        var nameB = b[whatToSort].toUpperCase();\r\n        if (this.state.nameSort !== \"des\") {\r\n            if (nameA < nameB) {\r\n                return -1 ;\r\n            } if (nameA > nameB) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            if (nameA < nameB) {\r\n                return 1;\r\n            }\r\n            if (nameA > nameB) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    });\r\n    const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\r\n    this.setState({ sortOrder: newSortOrder })\r\n}\r\n}\r\n\r\nexport default Sorting"]},"metadata":{},"sourceType":"module"}