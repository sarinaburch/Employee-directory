{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarin\\\\desktop\\\\bootcamp\\\\Employee-directory\\\\src\\\\Components\\\\EmployeeData.js\";\nimport React from 'react';\nimport API from '../Utils/API';\n\nclass PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: [],\n      sortOrder: \"\"\n    };\n\n    this.resultEmployees = query => {\n      API.search(query).then(res => this.setState({\n        result: res.data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.handleSort = () => {\n      let newSort;\n\n      if (this.state.sortOrder !== \"des\") {\n        newSort = this.state.result.sort((a, b) => {\n          return a.id.value - b.id.value;\n        });\n      } else {\n        newSort = this.state.result.sort((a, b) => {\n          return b.id.value - a.id.value;\n        });\n      }\n\n      console.log(newSort);\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.setState({\n        result: newSort,\n        sortOrder: newSortOrder\n      });\n    };\n\n    this.handleStringSort = () => {\n      const newSort = this.state.result.sort((a, b) => {\n        var stringA = a.name.first.toUpperCase();\n        var stringB = b[whatToSort].toUpperCase();\n\n        if (this.state.sortOrder === \"des\") {\n          if (stringA < stringB) {\n            return -1;\n          }\n\n          if (stringA > stringB) {\n            return 1;\n          } // strings must be equal\n\n\n          return 0;\n        } else {\n          if (stringA < stringB) {\n            return 1;\n          }\n\n          if (stringA > stringB) {\n            return -1;\n          } // strings must be equal\n\n\n          return 0;\n        }\n      });\n      console.log(newSort);\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.setState({\n        result: newSort,\n        sortOrder: newSortOrder\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.resultEmployees(\"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table-container table is-fullwidth is-hoverable scheme-main-bis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.handleStringSort(\"first\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.handleSort(\"id.value\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Employee ID\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.state.result.map(result => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, result.name.first), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, result.name.last), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, result.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, result.phone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, result.id.value));\n    }))));\n  }\n\n}\n\nexport default PersonList;","map":{"version":3,"sources":["C:/Users/sarin/desktop/bootcamp/Employee-directory/src/Components/EmployeeData.js"],"names":["React","API","PersonList","Component","state","result","sortOrder","resultEmployees","query","search","then","res","setState","data","results","catch","err","console","log","handleSort","newSort","sort","a","b","id","value","newSortOrder","handleStringSort","stringA","name","first","toUpperCase","stringB","whatToSort","componentDidMount","render","map","last","email","phone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADyB;;AAAA,SAUjCC,eAViC,GAUfC,KAAK,IAAI;AACvBP,MAAAA,GAAG,CAACQ,MAAJ,CAAWD,KAAX,EACCE,IADD,CACMC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEM,GAAG,CAACE,IAAJ,CAASC;AAAlB,OAAd,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH,KAdgC;;AAAA,SAgBjCG,UAhBiC,GAgBpB,MAAM;AACH,UAAIC,OAAJ;;AACI,UAAI,KAAKhB,KAAL,CAAWE,SAAX,KAAyB,KAA7B,EAAoC;AACjCc,QAAAA,OAAO,GAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1C,iBAAOD,CAAC,CAACE,EAAF,CAAKC,KAAL,GAAaF,CAAC,CAACC,EAAF,CAAKC,KAAzB;AACH,SAFY,CAAV;AAGN,OAJG,MAIG;AACHL,QAAAA,OAAO,GAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvC,iBAAOA,CAAC,CAACC,EAAF,CAAKC,KAAL,GAAaH,CAAC,CAACE,EAAF,CAAKC,KAAzB;AACH,SAFS,CAAV;AAGH;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,YAAMM,YAAY,GAAG,KAAKtB,KAAL,CAAWE,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKM,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEe,OAAT;AAAkBd,QAAAA,SAAS,EAAEoB;AAA7B,OAAd;AACH,KA9BoB;;AAAA,SAgCrBC,gBAhCqB,GAgCF,MAAM;AACrB,YAAMP,OAAO,GAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAIK,OAAO,GAAGN,CAAC,CAACO,IAAF,CAAOC,KAAP,CAAaC,WAAb,EAAd;AACA,YAAIC,OAAO,GAAGT,CAAC,CAACU,UAAD,CAAD,CAAcF,WAAd,EAAd;;AACA,YAAI,KAAK3B,KAAL,CAAWE,SAAX,KAAyB,KAA7B,EAAoC;AAEhC,cAAIsB,OAAO,GAAGI,OAAd,EAAuB;AACnB,mBAAO,CAAC,CAAR;AACH;;AACD,cAAIJ,OAAO,GAAGI,OAAd,EAAuB;AACnB,mBAAO,CAAP;AACH,WAP+B,CAShC;;;AACA,iBAAO,CAAP;AACH,SAXD,MAWO;AACH,cAAIJ,OAAO,GAAGI,OAAd,EAAuB;AACnB,mBAAO,CAAP;AACH;;AACD,cAAIJ,OAAO,GAAGI,OAAd,EAAuB;AACnB,mBAAO,CAAC,CAAR;AACH,WANE,CAQH;;;AACA,iBAAO,CAAP;AACH;AACJ,OAzBe,CAAhB;AA0BAf,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,YAAMM,YAAY,GAAG,KAAKtB,KAAL,CAAWE,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKM,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAEe,OAAV;AAAmBd,QAAAA,SAAS,EAAEoB;AAA9B,OAAd;AACH,KA9DoB;AAAA;;AAMjCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAK3B,eAAL,CAAqB,EAArB;AACH;;AAwDT4B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,MAAA,SAAS,EAAC,iEAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKR,gBAAL,CAAsB,OAAtB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAKI;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKR,UAAL,CAAgB,UAAhB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWC,MAAX,CAAkB+B,GAAlB,CAAsB/B,MAAM,IAAI;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,MAAM,CAACwB,IAAP,CAAYC,KAAjB,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKzB,MAAM,CAACwB,IAAP,CAAYQ,IAAjB,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKhC,MAAM,CAACiC,KAAZ,CAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKjC,MAAM,CAACkC,KAAZ,CAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKlC,MAAM,CAACmB,EAAP,CAAUC,KAAf,CALG,CAAP;AAOH,KARA,CADL,CAVJ,CADA,CADJ;AA0BH;;AA3FwC;;AA8FzC,eAAevB,UAAf","sourcesContent":["import React from 'react';\r\nimport API from '../Utils/API';\r\n\r\nclass PersonList extends React.Component {\r\n        state = {\r\n            result: [],\r\n            sortOrder: \"\"\r\n        };\r\n\r\n        componentDidMount() {\r\n            this.resultEmployees(\"\")\r\n        }\r\n\r\n        resultEmployees = query => {\r\n            API.search(query)\r\n            .then(res => this.setState({result: res.data.results}))\r\n            .catch(err => console.log(err))\r\n        }\r\n\r\n        handleSort = () => {\r\n                        let newSort\r\n                            if (this.state.sortOrder !== \"des\") {\r\n                               newSort = this.state.result.sort((a, b) => {\r\n                                return a.id.value - b.id.value;\r\n                            }) \r\n                        } else {\r\n                            newSort = this.state.result.sort((a, b) => {\r\n                                return b.id.value - a.id.value;\r\n                            }) \r\n                        }\r\n                        console.log(newSort)\r\n                        const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\"\r\n                        this.setState({result: newSort, sortOrder: newSortOrder})\r\n                    }\r\n\r\n                    handleStringSort = () => {\r\n                        const newSort = this.state.result.sort((a, b) => {\r\n                            var stringA = a.name.first.toUpperCase();\r\n                            var stringB = b[whatToSort].toUpperCase();\r\n                            if (this.state.sortOrder === \"des\") {\r\n                \r\n                                if (stringA < stringB) {\r\n                                    return -1;\r\n                                }\r\n                                if (stringA > stringB) {\r\n                                    return 1;\r\n                                }\r\n                \r\n                                // strings must be equal\r\n                                return 0;\r\n                            } else {\r\n                                if (stringA < stringB) {\r\n                                    return 1;\r\n                                }\r\n                                if (stringA > stringB) {\r\n                                    return -1;\r\n                                }\r\n                \r\n                                // strings must be equal\r\n                                return 0;\r\n                            }\r\n                        });\r\n                        console.log(newSort);\r\n                        const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\r\n                        this.setState({ result: newSort, sortOrder: newSortOrder })\r\n                    }\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n        <table className=\"table-container table is-fullwidth is-hoverable scheme-main-bis\">\r\n            <thead>\r\n                <tr>\r\n                    <th onClick={() => this.handleStringSort(\"first\")}>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th onClick={() => this.handleSort(\"id.value\")}>Employee ID</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.result.map(result => {\r\n                    return <tr>\r\n                        <td>{result.name.first}</td>\r\n                        <td>{result.name.last}</td>\r\n                        <td>{result.email}</td>\r\n                        <td>{result.phone}</td>\r\n                        <td>{result.id.value}</td>\r\n                    </tr>;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}