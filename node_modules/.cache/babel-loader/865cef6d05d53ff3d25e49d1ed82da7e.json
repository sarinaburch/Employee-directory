{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sarin\\\\desktop\\\\bootcamp\\\\Employee-directory\\\\src\\\\Components\\\\EmployeeData.js\";\nimport React from 'react';\nimport API from '../Utils/API';\n\nclass PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: [],\n      sortOrder: \"\",\n      filter: \"\",\n      filterBy: \"lastName\",\n      currentSort: \"default\",\n      sortField: \"\"\n    };\n\n    this.resultEmployees = query => {\n      API.search(query).then(res => this.setState({\n        result: res.data.results\n      })).catch(err => console.log(err));\n    };\n\n    this.handleStringSort = () => {\n      const newSort = this.state.result.sort((a, b) => {\n        var nameA = a.name.first.toUpperCase();\n        var nameB = b.name.first.toUpperCase();\n\n        if (this.state.sortOrder === \"des\") {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          } // strings must be equal\n\n\n          return 0;\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          } // strings must be equal\n\n\n          return 0;\n        }\n      });\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.setState({\n        result: newSort,\n        sortOrder: newSortOrder\n      });\n    };\n\n    this.handleStringSort2 = () => {\n      const newSort = this.state.result.sort((a, b) => {\n        var nameA = a.name.last.toUpperCase();\n        var nameB = b.name.last.toUpperCase();\n\n        if (this.state.sortOrder === \"des\") {\n          if (nameA < nameB) {\n            return -1;\n          }\n\n          if (nameA > nameB) {\n            return 1;\n          } // strings must be equal\n\n\n          return 0;\n        } else {\n          if (nameA < nameB) {\n            return 1;\n          }\n\n          if (nameA > nameB) {\n            return -1;\n          } // strings must be equal\n\n\n          return 0;\n        }\n      });\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.setState({\n        result: newSort,\n        sortOrder: newSortOrder\n      });\n    };\n\n    this.filterNames = search => {\n      var filterResult = this.state.result.filter(result => result.name.last === search);\n      this.setState({\n        result: filterResult\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const value = event.target.value;\n      this.filterNames(value);\n      this.filterNames(this.state.search);\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.resultEmployees(\"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"hero is-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-body \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container has-text-centered \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Employee Directory\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"*Click First or Last Name to sort alphabetically or search by name in search bar.\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input is-rounded is-normal\",\n      type: \"text\",\n      placeholder: \"Search Employee By Name\",\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table-container table is-fullwidth is-hoverable scheme-main-bis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.handleStringSort(\"first\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      onClick: () => this.handleStringSort2(\"last\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Employee ID\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, this.state.result.map(result => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 33\n        }\n      }, result.name.first), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 33\n        }\n      }, result.name.last), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 33\n        }\n      }, result.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 33\n        }\n      }, result.phone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      }, result.id.value));\n    }))));\n  }\n\n}\n\nexport default PersonList;","map":{"version":3,"sources":["C:/Users/sarin/desktop/bootcamp/Employee-directory/src/Components/EmployeeData.js"],"names":["React","API","PersonList","Component","state","result","sortOrder","filter","filterBy","currentSort","sortField","resultEmployees","query","search","then","res","setState","data","results","catch","err","console","log","handleStringSort","newSort","sort","a","b","nameA","name","first","toUpperCase","nameB","newSortOrder","handleStringSort2","last","filterNames","filterResult","handleFormSubmit","event","preventDefault","value","target","handleInputChange","componentDidMount","render","map","email","phone","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIRC,MAAAA,QAAQ,EAAE,UAJF;AAKRC,MAAAA,WAAW,EAAE,SALL;AAMRC,MAAAA,SAAS,EAAE;AANH,KAD6B;;AAAA,SAcrCC,eAdqC,GAcnBC,KAAK,IAAI;AACvBX,MAAAA,GAAG,CAACY,MAAJ,CAAWD,KAAX,EACKE,IADL,CACUC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEU,GAAG,CAACE,IAAJ,CAASC;AAAnB,OAAd,CADjB,EAEKC,KAFL,CAEWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFlB;AAGH,KAlBoC;;AAAA,SAqCrCG,gBArCqC,GAqClB,MAAM;AACrB,YAAMC,OAAO,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAIC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOC,KAAP,CAAaC,WAAb,EAAZ;AACA,YAAIC,KAAK,GAAGL,CAAC,CAACE,IAAF,CAAOC,KAAP,CAAaC,WAAb,EAAZ;;AACA,YAAI,KAAK3B,KAAL,CAAWE,SAAX,KAAyB,KAA7B,EAAoC;AAEhC,cAAIsB,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH;;AACD,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAP;AACH,WAP+B,CAShC;;;AACA,iBAAO,CAAP;AACH,SAXD,MAWO;AACH,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAP;AACH;;AACD,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH,WANE,CAQH;;;AACA,iBAAO,CAAP;AACH;AACJ,OAzBe,CAAhB;AA0BA,YAAMC,YAAY,GAAG,KAAK7B,KAAL,CAAWE,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKU,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEmB,OAAV;AAAmBlB,QAAAA,SAAS,EAAE2B;AAA9B,OAAd;AACH,KAlEoC;;AAAA,SAmErCC,iBAnEqC,GAmEjB,MAAM;AACtB,YAAMV,OAAO,GAAG,KAAKpB,KAAL,CAAWC,MAAX,CAAkBoB,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC7C,YAAIC,KAAK,GAAGF,CAAC,CAACG,IAAF,CAAOM,IAAP,CAAYJ,WAAZ,EAAZ;AACA,YAAIC,KAAK,GAAGL,CAAC,CAACE,IAAF,CAAOM,IAAP,CAAYJ,WAAZ,EAAZ;;AACA,YAAI,KAAK3B,KAAL,CAAWE,SAAX,KAAyB,KAA7B,EAAoC;AAEhC,cAAIsB,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH;;AACD,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAP;AACH,WAP+B,CAShC;;;AACA,iBAAO,CAAP;AACH,SAXD,MAWO;AACH,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAP;AACH;;AACD,cAAIJ,KAAK,GAAGI,KAAZ,EAAmB;AACf,mBAAO,CAAC,CAAR;AACH,WANE,CAQH;;;AACA,iBAAO,CAAP;AACH;AACJ,OAzBe,CAAhB;AA0BA,YAAMC,YAAY,GAAG,KAAK7B,KAAL,CAAWE,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKU,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEmB,OAAV;AAAmBlB,QAAAA,SAAS,EAAE2B;AAA9B,OAAd;AACH,KAhGoC;;AAAA,SAiGrCG,WAjGqC,GAiGtBvB,MAAD,IAAY;AACtB,UAAIwB,YAAY,GAAG,KAAKjC,KAAL,CAAWC,MAAX,CAAkBE,MAAlB,CAAyBF,MAAM,IAAIA,MAAM,CAACwB,IAAP,CAAYM,IAAZ,KAAqBtB,MAAxD,CAAnB;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,MAAM,EAAEgC;AADE,OAAd;AAGH,KAtGoC;;AAAA,SAwGrCC,gBAxGqC,GAwGlBC,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AAGA,WAAKL,WAAL,CAAiBK,KAAjB;AACA,WAAKL,WAAL,CAAiB,KAAKhC,KAAL,CAAWS,MAA5B;AACH,KA/GoC;;AAAA,SAiHrC8B,iBAjHqC,GAiHjBJ,KAAK,IAAI;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AACA,YAAMZ,IAAI,GAAGU,KAAK,CAACG,MAAN,CAAab,IAA1B;AAEA,WAAKb,QAAL,CAAc;AACV,SAACa,IAAD,GAAQY;AADE,OAAd;AAGH,KAzHoC;AAAA;;AAUrCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKjC,eAAL,CAAqB,EAArB;AACH;;AA8GDkC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAJJ,eAKI;AAAO,MAAA,SAAS,EAAC,4BAAjB;AAA8C,MAAA,IAAI,EAAC,MAAnD;AAA0D,MAAA,WAAW,EAAC,yBAAtE;AAAgG,MAAA,gBAAgB,EAAE,KAAKP,gBAAvH;AAAyI,MAAA,iBAAiB,EAAE,KAAKK,iBAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ,CADJ,CADJ,eAYI;AAAO,MAAA,SAAS,EAAC,iEAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKpB,gBAAL,CAAsB,OAAtB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKW,iBAAL,CAAuB,MAAvB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CADJ,CADJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK9B,KAAL,CAAWC,MAAX,CAAkByC,GAAlB,CAAsBzC,MAAM,IAAI;AAC7B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,MAAM,CAACwB,IAAP,CAAYC,KAAjB,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKzB,MAAM,CAACwB,IAAP,CAAYM,IAAjB,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK9B,MAAM,CAAC0C,KAAZ,CAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK1C,MAAM,CAAC2C,KAAZ,CAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK3C,MAAM,CAAC4C,EAAP,CAAUR,KAAf,CALG,CAAP;AAOH,KARA,CADL,CAVJ,CAZJ,CADJ;AAqCH;;AAhKoC;;AAmKzC,eAAevC,UAAf","sourcesContent":["import React from 'react';\r\nimport API from '../Utils/API';\r\n\r\nclass PersonList extends React.Component {\r\n    state = {\r\n        result: [],\r\n        sortOrder: \"\",\r\n        filter: \"\",\r\n    filterBy: \"lastName\",\r\n    currentSort: \"default\",\r\n    sortField: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resultEmployees(\"\")\r\n    }\r\n\r\n    resultEmployees = query => {\r\n        API.search(query)\r\n            .then(res => this.setState({ result: res.data.results }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    // handleSort = () => {\r\n    //                 let newSort\r\n    //                     if (this.state.sortOrder !== \"des\") {\r\n    //                        newSort = this.state.result.sort((a, b) => {\r\n    //                         return a.id.value - b.id.value;\r\n    //                     }) \r\n    //                 } else {\r\n    //                     newSort = this.state.result.sort((a, b) => {\r\n    //                         return b.id.value - a.id.value;\r\n    //                     }) \r\n    //                 }\r\n    //                 console.log(newSort)\r\n    //                 const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\"\r\n    //                 this.setState({result: newSort, sortOrder: newSortOrder})\r\n    //             }\r\n\r\n    handleStringSort = () => {\r\n        const newSort = this.state.result.sort((a, b) => {\r\n            var nameA = a.name.first.toUpperCase();\r\n            var nameB = b.name.first.toUpperCase();\r\n            if (this.state.sortOrder === \"des\") {\r\n\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n\r\n                // strings must be equal\r\n                return 0;\r\n            } else {\r\n                if (nameA < nameB) {\r\n                    return 1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return -1;\r\n                }\r\n\r\n                // strings must be equal\r\n                return 0;\r\n            }\r\n        });\r\n        const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\r\n        this.setState({ result: newSort, sortOrder: newSortOrder })\r\n    }\r\n    handleStringSort2 = () => {\r\n        const newSort = this.state.result.sort((a, b) => {\r\n            var nameA = a.name.last.toUpperCase();\r\n            var nameB = b.name.last.toUpperCase();\r\n            if (this.state.sortOrder === \"des\") {\r\n\r\n                if (nameA < nameB) {\r\n                    return -1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return 1;\r\n                }\r\n\r\n                // strings must be equal\r\n                return 0;\r\n            } else {\r\n                if (nameA < nameB) {\r\n                    return 1;\r\n                }\r\n                if (nameA > nameB) {\r\n                    return -1;\r\n                }\r\n\r\n                // strings must be equal\r\n                return 0;\r\n            }\r\n        });\r\n        const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\r\n        this.setState({ result: newSort, sortOrder: newSortOrder })\r\n    }\r\n    filterNames = (search) => {\r\n        var filterResult = this.state.result.filter(result => result.name.last === search)\r\n        this.setState({\r\n            result: filterResult\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n\r\n\r\n        this.filterNames(value);\r\n        this.filterNames(this.state.search);\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        event.preventDefault();\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"hero is-light\">\r\n                    <div className=\"hero-body \">\r\n                        <div className=\"container has-text-centered \">\r\n                            <h1 className=\"title\">\r\n                                Employee Directory\r\n                            </h1>\r\n                            <h4>*Click First or Last Name to sort alphabetically or search by name in search bar.</h4>\r\n                            <input className=\"input is-rounded is-normal\" type=\"text\" placeholder=\"Search Employee By Name\" handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <table className=\"table-container table is-fullwidth is-hoverable scheme-main-bis\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th onClick={() => this.handleStringSort(\"first\")}>First Name</th>\r\n                            <th onClick={() => this.handleStringSort2(\"last\")}>Last Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone</th>\r\n                            <th>Employee ID</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.result.map(result => {\r\n                            return <tr>\r\n                                <td>{result.name.first}</td>\r\n                                <td>{result.name.last}</td>\r\n                                <td>{result.email}</td>\r\n                                <td>{result.phone}</td>\r\n                                <td>{result.id.value}</td>\r\n                            </tr>;\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}