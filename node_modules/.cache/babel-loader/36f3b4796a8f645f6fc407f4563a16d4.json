{"ast":null,"code":"import React from 'react';\nimport Axios from 'axios';\n\nclass Users extends React.Componenet {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userList: results,\n      sortOrder: \"\"\n    };\n\n    this.handleSort = () => {\n      console.log(\"test\");\n      let newSort;\n\n      if (this.state.sortOrder !== \"des\") {\n        newSort = this.state.results.sort((a, b) => {\n          return a.id - b.id;\n        });\n      } else {\n        newSort = this.state.results.sort((a, b) => {\n          return b.id - a.id;\n        });\n      }\n\n      console.log(newSort);\n      const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\";\n      this.state({\n        results: newSort,\n        sortOrder: newSortOrder\n      });\n    };\n  }\n\n  componentDidMount() {\n    Axios.get('https://randomuser.me/api/?results=100&nat=us').then(res => {\n      var results = res.data.results;\n      this.setState({\n        results: results\n      });\n      console.log(results);\n    });\n  }\n\n}\n\n;\nexport default Users;","map":{"version":3,"sources":["C:/Users/sarin/desktop/bootcamp/Employee-directory/src/Components/SortId.js"],"names":["React","Axios","Users","Componenet","state","userList","results","sortOrder","handleSort","console","log","newSort","sort","a","b","id","newSortOrder","componentDidMount","get","then","res","data","setState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,UAA1B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,QAAQ,EAAEC,OADN;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADyB;;AAAA,SAejCC,UAfiC,GAepB,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAIC,OAAJ;;AACI,UAAI,KAAKP,KAAL,CAAWG,SAAX,KAAyB,KAA7B,EAAoC;AACjCI,QAAAA,OAAO,GAAG,KAAKP,KAAL,CAAWE,OAAX,CAAmBM,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3C,iBAAOD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;AACH,SAFY,CAAV;AAGN,OAJG,MAIG;AACHJ,QAAAA,OAAO,GAAG,KAAKP,KAAL,CAAWE,OAAX,CAAmBM,IAAnB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC,iBAAOA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAAhB;AACH,SAFS,CAAV;AAGH;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,YAAMK,YAAY,GAAG,KAAKZ,KAAL,CAAWG,SAAX,KAAyB,KAAzB,GAAiC,KAAjC,GAAyC,KAA9D;AACA,WAAKH,KAAL,CAAW;AAACE,QAAAA,OAAO,EAAEK,OAAV;AAAmBJ,QAAAA,SAAS,EAAES;AAA9B,OAAX;AACH,KA9B4B;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAChBhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,+CAAV,EAA2DC,IAA3D,CAAgEC,GAAG,IAAI;AACnE,UAAId,OAAO,GAAGc,GAAG,CAACC,IAAJ,CAASf,OAAvB;AACA,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEH,KALD;AAMH;;AAboC;;AA+BhC;AACL,eAAeJ,KAAf","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass Users extends React.Componenet {\r\n    state = {\r\n        userList: results,\r\n        sortOrder: \"\"\r\n    };\r\n\r\ncomponentDidMount() {\r\n    Axios.get('https://randomuser.me/api/?results=100&nat=us').then(res => {\r\n        var results = res.data.results;\r\n        this.setState({ results: results });\r\n        console.log(results)\r\n\r\n    })\r\n};\r\n\r\n    handleSort = () => {\r\n            console.log(\"test\")\r\n            let newSort\r\n                if (this.state.sortOrder !== \"des\") {\r\n                   newSort = this.state.results.sort((a, b) => {\r\n                    return a.id - b.id;\r\n                }) \r\n            } else {\r\n                newSort = this.state.results.sort((a, b) => {\r\n                    return b.id - a.id;\r\n                }) \r\n            }\r\n            console.log(newSort)\r\n            const newSortOrder = this.state.sortOrder === \"des\" ? \"asc\" : \"des\"\r\n            this.state({results: newSort, sortOrder: newSortOrder})\r\n        }\r\n    }; \r\nexport default Users;"]},"metadata":{},"sourceType":"module"}